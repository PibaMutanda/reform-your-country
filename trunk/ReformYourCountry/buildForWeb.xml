<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project name="reform-your-country" default="war" basedir=".">
	<property file="build.properties" />
	<property environment="env" />

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${env.TOMCAT_HOME}">
					<include name="*.jar" />
		</fileset>
	</path>
	

	<!-- convert classpath to a flat list/string for use in manifest/debug task -->
	<pathconvert property="mf.classpath" pathsep=";">
		<path refid="classpath" />
		<flattenmapper />
	</pathconvert>

	<target name="init" description="Perform some init task" depends="clean">
		<tstamp />
		<mkdir dir="${build.dir}" />
		<manifest file="MANIFEST.MF">
			<attribute name="Built-By" value="${manifest.built.by}" />
			<attribute name="Created-By" value="${manifest.created.by}" />
			<attribute name="Main-Class" value="${manifest.main.class}" />
			<attribute name="Implementation-Version" value="${version.number}-b${build.number}" />
			<attribute name="Built-Date" value="${TODAY}" />
			<attribute name="Class-Path" value="${mf.classpath}" />
		</manifest>
	</target>

	<target name="compile" description="compile the source" depends="init">
		<echo message="Building ${app.name} ..." />
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" classpathref="classpath">
			<exclude name="**/test/**" />
		</javac>
	</target>
	<target name="set-properties" depends="init" description="Set properties to the appropiate values depending of the mode and the version">
			<if>
				<equals arg1="${type}" arg2="PROD" />
				<then>
					<property name="tomcat.webapps_path" value="${tomcat.webapps_path.prod}" />
					<property name="jbb.db" value="${jbb.com_db.prod}" />
					<property name="jbb.mail.address" value="${jbb.mail.address.prod}" />
					<property name="lucene.indexdir" value="${lucene.indexdir.prod}" />
					<property name="devmode" value="false" />
					<property name="folders.levelspicturesfolderpath" value="${folders.levelspicturesfolderpath.prod}" />
					<property name="folders.generatedcontent" value="${folders.generatedcontent.prod}" />
					<property name="assigner.context" value="${assigner.context.prod}" />
					<property name="assigner.serverip" value="${assigner.serverip.prod}" />
					<property name="rss.path" value="${rss.path.prod}" />
					<property name="paypal.environment" value="${paypal.environment.prod}" />
					<!-- <property name="log4j.rootLogger" value="WARN, File, Jira"/> -->
					<property name="log4j.rootLogger" value="WARN, File" />
					<property name="log4j.mailLogger" value="INFO, Mail" />
					<property name="log4j.batchLogger" value="INFO, Batch" />
					<property name="vaadin.productionMode" value="true" />
					<property name="domain.name" value="${domain.name.prod}" />

					<!-- replaces sensible infos with encrypted properties --> 
					<propertyselector property="encrypted.properties.list"
					                         delimiter=","
					                         match="encrypted\.(.*)"
					                         select="\1"
					                         casesensitive="false" />
					<foreach list="${encrypted.properties.list}" param="encrypted.property" target="replaceEncryptedProperties" />
				</then>
				<elseif>
					<equals arg1="${type}" arg2="DEV" />
					<then>
						<property name="mail.from.notifier.address" value="no-reply@ryc.be" />
						<property name="jbb.mail.address" value="${jbb.mail.address.dev}" />
						<property name="lucene.indexdir" value="${lucene.indexdir.dev}" />
						<property name="devmode" value="true" />
						<property name="folders.levelspicturesfolderpath" value="${folders.levelspicturesfolderpath.dev}" />
						<property name="folders.generatedcontent" value="${folders.generatedcontent.dev}" />
						<property name="folders.corpreport" value="${folders.corpreport.dev}" />
						<property name="assigner.context" value="${assigner.context.dev}" />
						<property name="assigner.serverip" value="${assigner.serverip.dev}" />
						<property name="rss.path" value="${rss.path.dev}" />
						<property name="paypal.environment" value="${paypal.environment.dev}" />
						<property name="log4j.rootLogger" value="WARN, Console" />
						<property name="log4j.mailLogger" value="INFO, Console" />
						<property name="log4j.batchLogger" value="INFO, Console" />
						<property name="vaadin.productionMode" value="false" />
						<property name="domain.name" value="${domain.name.dev}" />
					</then>
			</elseif>
		</if>
	</target>
	<target name="war" depends="compile">
		<echo message="Making war file ..." />
		<copy todir="build/classes">
					<fileset dir="src/">
						<exclude name="**/*.java" />
					</fileset>
		</copy>

		<war destfile="dist/ROOT.war" webxml="WebContent/WEB-INF/web.xml">
			<fileset dir="WebContent"/>
			<lib dir="WebContent/WEB-INF/lib"/>
			<classes dir="build/classes"/>
		</war>
	</target>
    <!--TODO make war instead of jar-->
	<!--<target name="jar" depends="compile" description="CrÃ©er un jar contenant seulement les classes normales (pas celles de test)">
		<echo message="making the jar"/>
		<mkdir dir="${build.dir}/lib" />
		<jar jarfile="${build.dir}/lib/${app.name}.jar" basedir="${build.dir}" includes="**" excludes="test/**"/>
	</target>-->




	<target name="clean" description="clean up">
		<echo message="cleanings..."/>
		<delete dir="${build.dir}" />
	</target>

	<target name="debug" description="Lists the properties for debugging purposes">
		<echo message="Lists the properties for debugging purposes ..." />
		<echo message="ant.version                    = ${ant.version}" />
		<echo message="ant.home                       = ${ant.home}" />
		<echo message="java.home                      = ${env.JAVA_HOME}" />
		<echo message="" />
		<echo message="type                           = ${type}" />
		<echo message="version                        = ${version}" />
		<echo message="app.name                       = ${app.name}" />
		<echo message="basedir                        = ${basedir}" />
		<echo message="lib.dir                        = ${lib.dir}" />
		<echo message="build.dir                      = ${build.dir}" />
		<echo message="classpath                      = ${mf.classpath}" />
	</target>

</project>